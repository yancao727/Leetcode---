# 1533. Find the Index of the Large Integer
给你一个整数数组arr，其中只有一个数字大于其他所有数字，另外的数字都相同。你不能直接访问该数组，只能使用ArrayReader 类的API，它具有以下方法：

int compareSub(int l, int r, int x, int y): 其中0 <= l, r, x, y < ArrayReader.length(), l <= r 并且 x <= y. 这个函数用来比较子区间 arr[l..r]内数字和 与子区间 arr[x..y]内数字和的大小关系，返回结果为:
1 当arr[l]+arr[l+1]+...+arr[r] > arr[x]+arr[x+1]+...+arr[y]时.
0 当arr[l]+arr[l+1]+...+arr[r] == arr[x]+arr[x+1]+...+arr[y]时.
-1 当if arr[l]+arr[l+1]+...+arr[r] < arr[x]+arr[x+1]+...+arr[y]时.
int length(): 返回数组长度
你最多只能调用compareSub方法20次，另外上述两个方法的时间复杂度均为O(1)。

请找出数组中最大数的下标。

n = len(arr)
l, r = 0, n-1
while l < r:
    mid = (r + l) // 2
    if n // 2 == 0:
        res = reader.compareSub(l,mid, mid + 1, r)
    else:
        mid -= 1
        res = reader.compareSub(l,mid, mid + 1, r-1)
        if res = 0:
            return r
    if res == 1:
        r = mid
    else:
        l = mid + 1
return l
    
